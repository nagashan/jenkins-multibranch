name: Build Ruby

on:
  workflow_call:
    secrets:
      CI_GITHUB_TOKEN:
        required: true
      CC_TEST_REPORTER_ID:
        required: true
env:
  GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
  BUNDLE_GITHUB__COM: ${{ secrets.CI_GITHUB_TOKEN }}:x-oauth-basic

jobs:
  buildRuby:
    runs-on: ubuntu-latest
    container: ruby:2.5
    env:
      DATABASE_URL: postgres://postgres:@localhost:5432/test
      TRACKING_SERVICE_URL: 'http://tracking-service-dev.us-east-1.elasticbeanstalk.com'
      COMPANY_SERVICE_URL: 'http://company-api-dev.us-east-1.elasticbeanstalk.com'
      SHARED_APP_SECRET: itsanopensecret
      SENDGRID_USERNAME: fake
      SENDGRID_PASSWORD: fake
      RAILS_ENV: test
      RACK_ENV: test
      FK_ENVIRONMENT: test
      AWS_REGION: us-east-1
      DISABLE_SPRING: 1
      DATABASE_HOST:
      DATABASE_NAME:
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          token: "${{ secrets.CI_GITHUB_TOKEN }}"
      - name: Branch name
        run: echo running on branch ${GITHUB_REF##*/}
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Build
        run: |
          apt-get update && apt-get install libicu-dev libsnappy-dev zip -y
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Setup Code Climate test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
      - name: Test
        run: |
          echo "Running unit tests.."
          bundle exec rspec
          # bundle exec rspec --failure-exit-code 0
          RSPEC_STATUS=$?
          echo "RSPEC_STATUS: $RSPEC_STATUS"
          exit 0
      - name: Publish code coverage
        run: |
          export GIT_BRANCH="${GITHUB_REF##*/}"
          echo $GIT_BRANCH
          ./cc-test-reporter after-build -r ${{secrets.CC_TEST_REPORTER_ID}}
